#--------------------------
df<-read_excel('air.xlsx')
head(df)
table(df1$측정소명)
guro <- df1 %>% filter(측정소명=='구로구')
dobong <- df1 %>% filter(측정소명=='도봉구')
boxplot(guro$미세먼지)
boxplot(guro$미세먼지, dobong$미세먼지)
boxplot(guro$미세먼지, dobong$미세먼지, names = c('구로구','도봉구'))
boxplot(guro$미세먼지, dobong$미세먼지, names = c('구로구','도봉구'), main = '18년도 4분기 미세먼지 비교')
#---------------오라클 연동
install.packages("DBI")
install.packages("RJDBC")
library(DBI)
library(rJava)
library(RJDBC)
drv<-JDBC("oracle.jdbc.driver.OracleDriver","D:/app/hong/virtual/product/12.2.0/dbhome_1/jdbc/lib/ojdbc8.jar")
conn<-dbConnect(drv,'jdbc:oracle:thin:@localhost:1521:orcl',"c##java00","java00")
conn<-dbConnect(drv,'jdbc:oracle:thin:@127.0.0.1:1521:orcl',"c##java00","java00")
conn<-dbConnect(drv,'jdbc:oracle:thin:@127.0.0.1:1521/orcl',"c##java00","java00")
sql <- "select * from emp"
dbGetQuery(conn,sql)
dbGetQuery(conn,sql)
sql <- "select * from emp where sal>2000"
dbGetQuery(conn,sql)
sql <- "select * from emp order by job"
dbGetQuery(conn,sql)
data<-dbGetQuery(conn,sql)
data
str(data)
#insert
sql<- "insert into emp values(1,'둘리','사원',7566,sysdate,100,0,30"
dbSendUpdate(conn,sql)
#insert
sql<- "insert into emp values(1,'둘리','사원',7566,sysdate,100,0,30)"
dbSendUpdate(conn,sql)
sql<-"select * from emp"
data
data
sql<-"select * from emp"
dbGetQuery(conn,sql)
#update
sql<-"update emp set sal=9999 where deptno=20"
dbSendUpdate(conn,sql)
sql<-"select * from emp"
dbGetQuery(conn,sql)
#delete
sql<-"delete emp where job ='manager'"
dbSendUpdate(conn,sql)
sql<-"select * from emp"
dbGetQuery(conn,sql)
#delete
sql<-"delete from emp where job ='manager'"
dbSendUpdate(conn,sql)
sql<-"select * from emp"
dbGetQuery(conn,sql)
#delete
sql<-"delete from emp where job ='MANAGER'"
dbSendUpdate(conn,sql)
sql<-"select * from emp"
dbGetQuery(conn,sql)
dbDisconnect(conn) # 연결종료
df<- read.table(file='clipboard')
df
df<- read.table(file='clipboard',header = T)
df<- read.csv(file='전처리.csv',header = T)
df
str(df)
df$age
head(df['age'])
head(df[4])
head(df[4,])
head(df[,4])
head(df[4])
head(df['gender','job'])
head(df[c('gender','job')])
head(df[c(2:4)])
head(df[-4])
summary(df)
mean(df$age,na.rm = T)
nae<-na.omit(df$age)
nae
length(nae)
length(df$age)
df1<-na.omit(df)
str(df1)
nae2<-df %>% filter(is.na(age)!=NULL)
nae2<-df %>% filter(!is.na(age))
nae2
length(nae2)
#----------------
df$price
df$price2 <- ifelse(is.na(df$price),0,df$price)
View(df)
#---------결측치를 평균으로
df$price3 <- ifelse(is.na(df$price),round(mean(df$price, na.rm = T)),df$price)
View(df)
df[c('price','price2','price3')]
# 이상치 처리
summary(df)
table(df$gender)
df2<-subset(df,gender==1|gender==2)
str(df2)
boxplot(price)
boxplot(df$price)
df2<-subset(df2,price>=2 & price<=8)
str(df2)
boxplot(df2)
boxplot(df2$price)
# 나이(20~69)
summary(df2)
df2<- subset(df2,age >=20 & age <=69)
df2
str(df2)
# 170p
mpg
# 170p
library(ggplot2)
mpg
mpg[c(65,124,131,153,212),"hwy"] <- NA
mpg[c('drv','hwy')]
mpg[is.na(c('drv','hwy'))]
is.na(c(mpg$drv,mpg$hwy))
length(is.na(c(mpg$drv,mpg$hwy)))
length(!is.na(c(mpg$drv,mpg$hwy)))
table(is.na(c(mpg$drv,mpg$hwy)))
# 2번
mpg %>% filter(!is.na(mpg$hwy)) %>% group_by(trans) %>% summarise(mean_hwy=mean(hwy))
# 2번
mpg %>% filter(!is.na(mpg$hwy)) %>% group_by(trans) %>% summarise(mean_hwy=mean(hwy)) %>% arrange(mean_hwy)
# 2번
mpg %>% filter(!is.na(mpg$hwy)) %>% group_by(trans) %>% summarise(mean_hwy=mean(hwy)) %>% arrange(mean_hwy)
# 2번
mpg %>% filter(!is.na(mpg$hwy)) %>% group_by(trans) %>% summarise(mean_hwy=mean(hwy)) %>% head(mean_hwy)
# 2번
mpg %>% filter(!is.na(mpg$hwy)) %>% group_by(trans) %>% summarise(mean_hwy=mean(hwy)) %>% arrange(mean_hwy)
# 2번
mpg %>% filter(!is.na(mpg$hwy)) %>% group_by(trans) %>% summarise(mean_hwy=mean(hwy)) %>% arrange(desc(mean_hwy))
# 178p
mpg[c(10,14,58,93),"drv"]<-'k'
mpg[c(29,43,129,203),'cty']<-c(3,4,39,42)
table(mpg$drv)
mpg$drv <- ifelse(mpg$drv == 'k',NA,mpg$drv)
mpg
# 1번
table(mpg$drv)
mpg$drv <- ifelse(mpg$drv %in% 'k',NA,mpg$drv)
# 1번
table(mpg$drv)
# 178p
mpg[c(10,14,58,93),"drv"]<-'k'
# 1번
table(mpg$drv)
mpg$drv <- ifelse(mpg$drv %in% 'k',NA,mpg$drv)
# 1번
table(mpg$drv)
#2번
boxplot(mpg$cty)
hist(mpg$cty)
#2번
boxplot(mpg$cty)
quantile(mpg$cty)
mpg$cty <- ifelse(mpg$cty < 3 | mpg$cty > 42, NA, mpg$cty)
table(mpg$cty)
#2번
boxplot(mpg$cty)
mpg$cty <- ifelse(mpg$cty < 3 | mpg$cty > 42, NA, mpg$cty)
#2번
boxplot(mpg$cty)
mpg$cty <- ifelse(mpg$cty < 3 | mpg$cty > 42, NA, mpg$cty)
#2번
boxplot(mpg$cty)
mpg$cty <- ifelse(mpg$cty < 9 | mpg$cty > 42, NA, mpg$cty)
#2번
boxplot(mpg$cty)
mpg$cty <- ifelse(mpg$cty < 9 | mpg$cty > 26, NA, mpg$cty)
table(mpg$cty)
#2번
boxplot(mpg$cty)
table(mpg$cty)
quantile(mpg$cty)
quantile(mpg$cty, na.rm = T)
#3번
mpg %>% filter(!is.na(c(mpg$drv,mpg$cty))) %>%summarise(mean(c(mpg$drv,mpg$cty)))
#3번
mpg %>% filter(!is.na(c(mpg$drv,mpg$cty))) %>%summarise(mean(mpg$drv))
#3번
mpg %>% filter(!is.na(c(mpg$drv,mpg$cty))) %>%summarise(mean(c(cty,drv))
#3번
mpg %>% filter(!is.na(c(mpg$drv,mpg$cty))) %>%summarise(mean(c(cty,drv)))
#3번
mpg %>% filter(!is.na(c(mpg$drv,mpg$cty))) %>%summarise(mean(c(cty,drv)))
#3번
mpg %>% filter(!is.na(drv) & !is.na(cty)) %>% group_by(drv) %>% summarise(mean_cty=mean(cty))
df<- read.csv(file='전처리.csv',header = T)
str(df)
head(df$age)
head(df['age'])
head(df[4])
head(df[c('gender','job')])
head(df[c(2:4)])
head(df[-4])
summary(df)
#결측치 제거하는 함수 omit
nae<-na.omit(df$age)
nae2<-df %>% filter(!is.na(age))
#----------------결측치 0으로
df$price
df$price2 <- ifelse(is.na(df$price),0,df$price)
View(df)
#---------결측치를 평균으로
df$price3 <- ifelse(is.na(df$price),round(mean(df$price, na.rm = T)),df$price)
df[c('price','price2','price3')]
# 이상치 처리
summary(df)
table(df$gender)
df2<-subset(df,gender==1|gender==2)
str(df2)
boxplot(df$price)
df2<-subset(df2,price>=2 & price<=8)
str(df2)
boxplot(df2$price)
# 나이(20~69)
summary(df2)
df2<- subset(df2,age >=20 & age <=69)
str(df2)
df2
table(df2$resident)
df2$resident2[df2$resident==1]<- '서울'
df2
df2$resident2[df2$resident==2]<- '인천'
df2$resident2[df2$resident==3]<- '대전'
df2$resident2[df2$resident==4]<- '대구'
df2$resident2[df2$resident==5]<- '시구군'
df2
view(df2)
View(df2)
# df2$job2 컬럼 생성, 1이면 공무원, 2이면 회사원, 3이면 개인사업
df2$job2[df2$job==1]<- '공무원'
df2$job2[df2$job==2]<- '회사원'
df2$job2[df2$job==3]<- '개인사업'
df2$age2[df2$age<=30]<- '청년층'
df2$age2[df2$age>30 & df2$age <= 55]<- '청년층'
df2$age2[df2$age> 55]<- '청년층'
View(df2)
df2$age2[df2$age>30 & df2$age <= 55]<- '중년층'
df2$age2[df2$age> 55]<- '장년층'
#--두범주형 변수의 관계
df<- read.csv('age.txt')
df
table(df$GENDER)
table(df$AGE)
table(df$GENDER, df$AGE)
barplot(df$GENDER, df$AGE)
barplot(c(df$GENDER, df$AGE))
t1<-table(df$GENDER, df$AGE)
barplot(t1)
barplot(t1, legend=T, col = rainbow(2))
barplot(t1, legend=T, col = rainbow(2), beside = T)
#-------------------------
bloodType <- c('A','B','A','AB','O','A','O','B','A','O','O','B','O','A','AB','B','O','A','A','B')
name=c("kim","park","lee","kim","park","lee","kim","park","lee","kim","park","lee","kim","park","lee","kim","park","lee","choi","lee")
gender=c("남","여","남","여","남","여","남","여","남","여","남","여","남","여","남","여","남","여","남","여")
df <- data.frame(name, gender, bloodType)
df
t1<- table(df$gender, df$bloodType)
t1
barplot(t1)
barplot(t1, legend = T, col=rainbow(2))
# 수치형 변수의 관계
df<- read.csv('study.txt')
df
plot(df$HOUR, df$SCORE)
plot(df$HOUR, df$SCORE, pch=16, col='red')
#상관계수(-1~1, 1에 가까울수록 양의 상관관계가 강함)
cor(df$HOUR, df$SCORE)
iris
plot(iris$Sepal.Length, iris$Sepal.Width)
cor(iris$Sepal.Length,iris$Sepal.Width)
# 범주형 변수와 수치형 변수의 관계
df<-read.csv('score.txt')
df
aggregate(SCORE~CITY, data =df,mean )
boxplot(SCORE~CITY,data = df)
#---------------------
library(ggplot2)
View(mpg)
# 1.배경설정
ggplot(data=mpg,aes(x=displ, y=hwy))
# 2. 그래프
ggplot(data=mpg,aes(x=displ, y=hwy))+geom_point()
# 3. 상세설정
ggplot(data=mpg,aes(x=displ,y=hwy))+
geom_point()+
xlim(3,6)
# 3. 상세설정
ggplot(data=mpg,aes(x=displ,y=hwy))+
geom_point()+
xlim(3,6)+
ylim(10,30)
# 3. 상세설정
ggplot(data=mpg,aes(x=displ,y=hwy))+
geom_point()+
xlim(3,6)+
ylim(10,30)
####구동박식(drv)별 평균 고속도로 연비(hwy)
library(dplyr)
mpg %>% group_by(drv) %>% summarise(avg=mean(hwy))
ggplot(data=mpg2,aes(x=drv,y=avg))+geom_col()
mpg2<-mpg %>% group_by(drv) %>% summarise(avg=mean(hwy))
ggplot(data=mpg2,aes(x=drv,y=avg))+geom_col()
# x축 정렬
ggplot(data=mpg2,aes(x=reorder(drv,avg),y=avg))+geom_col()
ggplot(data=mpg2,aes(x=reorder(drv,-avg),y=avg))+geom_col()
table(mpg$drv)
ggplot(data = mpg,aes(x=drv))+
ggplot(data = mpg,aes(x=drv))
ggplot(data = mpg,aes(x=drv))
ggplot(data = mpg,aes(x=drv))+geom_bar
ggplot(data = mpg,aes(x=drv))+geom_bar()
ggplot(data=mpg, aes(x=drv, y=hwy))+geom_boxplot()
# 데이터 분석 절차 : 변수검토 및 전처리 -> 변수간의 관계분석-------------
install.packages('foreign')
library(foreign)
df <- read.spss(file='Koweps_hpc10_2015_beta1.sav', to.data.frame = T)
View(df)
str(df)
library(dplyr)
df <- rename(df,
sex=h10_g3,
birth=h10_g4,
marriage=h10_g10,
religion=h10_g11,
code_job=h10_eco9,
income=p1002_8aq1,
code_region=h10_reg7)
View(df)
# 성별에 따른 월급차이
head(df$sex)
summarise(df$sex)
summary(df$sex)
table(df$sex)
df$sex2[df$sex==1]<-'남자'
df$sex2[df$sex==2]<-'여자'
table(df$sex2)
qplot(df$sex2)
summary(df$income)
df$income2 <- ifelse(df$income>=1 & df$income<=9998,df$income,NA)
sex_income <- df %>%
filter(!is.na(income2)) %>%
group_by(sex2) %>%
summarise(avg_income=mean(income))
ggplot(data= sex_income, aes(x = sex2, y=avg_income))+geom_col()
# 나이와 월급의 관계
summary(df$birth)
qplot(df$birth)
df$age <- 2015-df$birth+1
age_income <- df %>%
filter(!is.na(income)) %>%
group_by(age) %>%
summarise(avg_income = mean(income))
ggplot(data = age_income, aes(x =age, y= avg_inceom))+geom_line()
ggplot(data = age_income, aes(x =age, y= avg_income))+geom_line()
#연령대에 따른 월급의 차이
df$ageg[df$age<30]<-'초년'
df$ageg[df$age>=30 & df$age <=59]<-'중년'
df$ageg[df$age<30]<-'노년'
#연령대에 따른 월급의 차이
df$ageg[df$age<30]<-'초년'
df$ageg[df$age>=30 & df$age <=59]<-'중년'
df$ageg[df$age>60]<-'노년'
ageg_income <- df %>%
filter(!is.na(income)) %>%
group_by(ageg)%>%
summarise(avg_income=mean(income))
ggplot(data = ageg_income,aes(x=ageg, y=avg_income))+geom_col()+scale_x_discrete(limits=c('초년','중년','노년')
ggplot(data = ageg_income,aes(x=ageg, y=avg_income))+geom_col()+scale_x_discrete(limits=c('초년','중년','노년')
ggplot(data = ageg_income,aes(x=ageg, y=avg_income))+geom_col()+scale_x_discrete(limits=c('초년','중년','노년'))
# 연령대 및 성별에 따른 월급차이
ageg_sex_income<-df %>%
filter(!is.na(income)) %>%
group_by(ageg,sex2) %>%
summarise(avg_income=mean(income))
ageg_sex_income
ggplot(data = ageg_sex_income,aes(x=ageg,y=avg_income))+geom_col()
#연령대에 따른 월급의 차이
df$ageg[df$age<30]<-'초년'
df$ageg[df$age>=30 & df$age <=59]<-'중년'
df$ageg[df$age>60]<-'노년'
ageg_income <- df %>%
filter(!is.na(income)) %>%
group_by(ageg)%>%
summarise(avg_income=mean(income))
ggplot(data = ageg_income,aes(x=ageg, y=avg_income))+geom_col()+scale_x_discrete(limits=c('초년','중년','노년'))
# 연령대 및 성별에 따른 월급차이
ageg_sex_income<-df %>%
filter(!is.na(income)) %>%
group_by(ageg,sex2) %>%
summarise(avg_income=mean(income))
ageg_sex_income
ggplot(data = ageg_sex_income,aes(x=ageg,y=avg_income), fill=sex2)+geom_col()
ggplot(data = ageg_sex_income,aes(x=ageg,y=avg_income), fill=sex2)+geom_col()+scale_x_discrete(limits=c('초년','중년','노년'))
ggplot(data = ageg_sex_income,aes(x=ageg,y=avg_income), fill=sex2)+geom_col(position = 'dodge')+scale_x_discrete(limits=c('초년','중년','노년'))
ggplot(data = ageg_sex_income,aes(x=ageg,y=avg_income), fill=sex2)+geom_col(position = 'dodge')+scale_x_discrete(limits=c('초년','중년','노년'))
# 나이 및 성별에 따른 월급차이
ageg_sex_income<-df %>%
filter(!is.na(income)) %>%
group_by(ageg,sex2) %>%
summarise(avg_income=mean(income))
ageg_sex_income
# 나이 및 성별에 따른 월급차이
age_sex_income<-df %>%
filter(!is.na(income)) %>%
group_by(age,sex2) %>%
summarise(avg_income=mean(income))
ageg_sex_income
age_sex_income
ggplot(data = age_sex_income,aes(x=age,y=avg_income))+geom_line()
ggplot(data = age_sex_income,aes(x=age,y=avg_income, col=sex2))+geom_line()
# 198p 1번
class_cty <- mpg %>% filter(class %in% c('compact','subcompact','suv')) %>% summarise(cty)
# 198p 1번
class_cty <- mpg %>% filter(class %in% c('compact','subcompact','suv')) %>% summarise(mean(cty))
# 198p 1번
class_cty <- mpg %>% filter(class %in% c('compact','subcompact','suv'))
# 198p 1번
class_cty <- mpg %>% filter(class %in% c('compact','subcompact','suv')) %>% summarise(meam_cty=mean(cty))
# 198p 1번
class_cty <- mpg %>% filter(class %in% c('compact','subcompact','suv')) %>% summarise(mean_cty=mean(cty))
ggplot(data=class_cty,aes(x= class_cty,y= mean_cty))
ggplot(data=class_cty,aes(x= class_cty,y= mean_cty))+geom_boxplot()
# 198p 1번
class_cty <- mpg %>% filter(class %in% c('compact','subcompact','suv'))
ggplot(data=class_cty,aes(x= class ,y= cty))+geom_boxplot()
# 193p 1번
mpg %>% filter(class=='suv') %>% group_by(manufacturer) %>% summarise(mean_cty=mean(cty)) %>% arrange(mean_cty) %>% head()
# 193p 1번
mpg %>% filter(class=='suv') %>% group_by(manufacturer) %>% summarise(mean_cty=mean(cty)) %>% arrange(mean_cty) %>% head(5)
ggplot(data=suv_cty,aes(x=manufacturer, y=mean_cty))+geom_col()
# 193p 1번
suv_cty<-mpg %>% filter(class=='suv') %>% group_by(manufacturer) %>% summarise(mean_cty=mean(cty)) %>% arrange(mean_cty) %>% head(5)
ggplot(data=suv_cty,aes(x=manufacturer, y=mean_cty))+geom_col()
# 193p 2번
ggplot(data=mpg,aes(x = class))+geom_bar()
# 198p 1번
class_cty <- mpg %>% filter(class %in% c('compact','subcompact','suv'))
ggplot(data=class_cty,aes(x= class ,y= cty))+geom_boxplot()
#직업별 월급차이
table(df$code_job)
summary(df$code_job)
library(readxl)
listjob <-read_excel('Koweps_Codebook.xlsx',sheet = 2)
head(listjob)
df<-left_join(df,listjob,id='code_job')
head(df[c('code_job','job')])
job_income <- df %>%
filter(!is.na(job)) %>%
group_by(job) %>%
summarise(avg_income = mean(income))
job_income
ggplot(data=job_income,aes(x=job,y=avg_income))+geom_col()
job_income <- df %>%
filter(!is.na(job) & !is.na(income)) %>%
group_by(job) %>%
summarise(avg_income = mean(income))
job_income
ggplot(data=job_income,aes(x=job,y=avg_income))+geom_col()
job_income %>% arrange(ave_income)
job_income %>% arrange(avg_income)
job_income %>% arrange(desc(avg_income))
ggplot(data=job_income,aes(x=job,y=avg_income))+geom_col()+coord_flip()
top10<-job_income <- df %>%
filter(!is.na(job) & !is.na(income)) %>%
group_by(job) %>%
summarise(avg_income = mean(income))
ggplot(data=top10,aes(x=job,y=avg_income))+geom_col()+coord_flip()
job_income <- df %>%
filter(!is.na(job) & !is.na(income)) %>%
group_by(job) %>%
summarise(avg_income = mean(income)) %>%
topjob_income %>% arrange(desc(avg_income))
job_income <- df %>%
filter(!is.na(job) & !is.na(income)) %>%
group_by(job) %>%
summarise(avg_income = mean(income)) %>%
topjob_income %>% arrange(desc(avg_income))
job_income <- df %>%
filter(!is.na(job) & !is.na(income)) %>%
group_by(job) %>%
summarise(avg_income = mean(income)) %>%
top10<-job_income %>% arrange(desc(avg_income))
df<-left_join(df,listjob,id='code_job')
head(df[c('code_job','job')])
job_income <- df %>%
filter(!is.na(job) & !is.na(income)) %>%
group_by(job) %>%
summarise(avg_income = mean(income)) %>%
top10<-job_income %>% arrange(desc(avg_income))
job_income <- df %>%
filter(!is.na(job) & !is.na(income)) %>%
group_by(job) %>%
summarise(avg_income = mean(income))
top10<-job_income %>% arrange(desc(avg_income))
top10<-job_income %>% arrange(desc(avg_income)) %>% head(10)
ggplot(data=top10,aes(x=job,y=avg_income))+geom_col()+coord_flip()
bottom10<-job_income %>% arrange(desc(avg_income)) %>% tail(10)
ggplot(data=bottom10,aes(x=reorder(job,avg_income),y=avg_income))+geom_col()+coord_flip()
ggplot(data=bottom10,aes(x=job,y=avg_income))+geom_col()+coord_flip()
# 성별 직업 빈도
df %>% filter(!is.na(job) & sex2=='남자') %>%
group_by(job) %>%
summarise(cnt=n())
